{
  "swagger": "2.0",
  "info": {
    "title": "Hermes",
    "version": "1.0",
    "contact": {
      "name": "OwnMFA",
      "url": "https://www.ownmfa.com/",
      "email": "info@ownmfa.com"
    }
  },
  "tags": [
    {
      "name": "AppIdentityService"
    },
    {
      "name": "OrgService"
    },
    {
      "name": "SessionService"
    },
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/applications": {
      "get": {
        "summary": "List all applications.",
        "operationId": "AppIdentityService_ListApps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListAppsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "Number of applications to retrieve in a single page. Defaults to 50 if not specified, with a maximum of 250.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Token of the page to retrieve. If not specified, the first page of results will be returned. To request the next page of results, use next_page_token from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      },
      "post": {
        "summary": "Create an application.",
        "operationId": "AppIdentityService_CreateApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApp"
            }
          },
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "App message to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiApp"
            }
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      }
    },
    "/v1/applications/identities": {
      "get": {
        "summary": "List identities.",
        "operationId": "AppIdentityService_ListIdentities2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListIdentitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "Number of identities to retrieve in a single page. Defaults to 50 if not specified, with a maximum of 250.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Token of the page to retrieve. If not specified, the first page of results will be returned. To request the next page of results, use next_page_token from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appID",
            "description": "Application ID (UUID). If not specified, all rules are included.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      }
    },
    "/v1/applications/{app.id}": {
      "put": {
        "summary": "Update an application.",
        "operationId": "AppIdentityService_UpdateApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "app.id",
            "description": "Application ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "App message to update.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiApp"
            }
          },
          {
            "name": "updateMask",
            "description": "Fields to update. Automatically populated by a PATCH request. If not present, a full resource update is performed.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      },
      "patch": {
        "summary": "Update an application.",
        "operationId": "AppIdentityService_UpdateApp2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "app.id",
            "description": "Application ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "App message to update.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiApp"
            }
          },
          {
            "name": "updateMask",
            "description": "Fields to update. Automatically populated by a PATCH request. If not present, a full resource update is performed.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      }
    },
    "/v1/applications/{appID}/identities": {
      "get": {
        "summary": "List identities.",
        "operationId": "AppIdentityService_ListIdentities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListIdentitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appID",
            "description": "Application ID (UUID). If not specified, all rules are included.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "Number of identities to retrieve in a single page. Defaults to 50 if not specified, with a maximum of 250.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Token of the page to retrieve. If not specified, the first page of results will be returned. To request the next page of results, use next_page_token from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      }
    },
    "/v1/applications/{appID}/identities/{id}": {
      "get": {
        "summary": "Get an identity by ID.",
        "operationId": "AppIdentityService_GetIdentity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiIdentity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appID",
            "description": "Application ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Identity ID (UUID) to get. Identity method_oneof may be returned in simplified form.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      },
      "delete": {
        "summary": "Delete an identity by ID.",
        "operationId": "AppIdentityService_DeleteIdentity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "204": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appID",
            "description": "Application ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Identity ID (UUID) to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      }
    },
    "/v1/applications/{appID}/identities/{id}/activate": {
      "put": {
        "summary": "Activate an identity.",
        "operationId": "AppIdentityService_ActivateIdentity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiIdentity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appID",
            "description": "Application ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Identity ID (UUID) to activate.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "passcode": {
                  "type": "string",
                  "description": "Passcode for verification.",
                  "required": [
                    "passcode"
                  ]
                }
              },
              "description": "ActivateIdentityRequest is sent to activate an identity.",
              "required": [
                "passcode"
              ]
            }
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      }
    },
    "/v1/applications/{appID}/identities/{id}/challenge": {
      "post": {
        "summary": "Issue a challenge to an identity.",
        "operationId": "AppIdentityService_ChallengeIdentity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "202": {
            "description": "A successful response.",
            "schema": {}
          },
          "204": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appID",
            "description": "Application ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Identity ID (UUID) to issue challenge.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      }
    },
    "/v1/applications/{appID}/identities/{id}/verify": {
      "put": {
        "summary": "Verify an identity.",
        "operationId": "AppIdentityService_VerifyIdentity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appID",
            "description": "Application ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Identity ID (UUID) to verify.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "passcode": {
                  "type": "string",
                  "description": "Passcode for verification.",
                  "required": [
                    "passcode"
                  ]
                }
              },
              "description": "VerifyIdentityRequest is sent to verify an identity.",
              "required": [
                "passcode"
              ]
            }
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      }
    },
    "/v1/applications/{identity.appID}/identities": {
      "post": {
        "summary": "Create an identity.",
        "operationId": "AppIdentityService_CreateIdentity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateIdentityResponse"
            }
          },
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiIdentity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identity.appID",
            "description": "Application ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Identity message to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiIdentity"
            }
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      }
    },
    "/v1/applications/{id}": {
      "get": {
        "summary": "Get an application by ID.",
        "operationId": "AppIdentityService_GetApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Application ID (UUID) to get.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      },
      "delete": {
        "summary": "Delete an application by ID.",
        "operationId": "AppIdentityService_DeleteApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "204": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Application ID (UUID) to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AppIdentityService"
        ]
      }
    },
    "/v1/organizations": {
      "get": {
        "summary": "List all organizations.",
        "operationId": "OrgService_ListOrgs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListOrgsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "Number of organizations to retrieve in a single page. Defaults to 50 if not specified, with a maximum of 250.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Token of the page to retrieve. If not specified, the first page of results will be returned. To request the next page of results, use next_page_token from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrgService"
        ]
      },
      "post": {
        "summary": "Create an organization.",
        "operationId": "OrgService_CreateOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrg"
            }
          },
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrg"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Org message to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiOrg"
            }
          }
        ],
        "tags": [
          "OrgService"
        ]
      }
    },
    "/v1/organizations/{id}": {
      "get": {
        "summary": "Get an organization by ID.",
        "operationId": "OrgService_GetOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrg"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Organization ID (UUID) to get.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrgService"
        ]
      },
      "delete": {
        "summary": "Delete an organization by ID.",
        "operationId": "OrgService_DeleteOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "204": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Organization ID (UUID) to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrgService"
        ]
      }
    },
    "/v1/organizations/{org.id}": {
      "put": {
        "summary": "Update an organization.",
        "operationId": "OrgService_UpdateOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrg"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "org.id",
            "description": "Organization ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Org message to update.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiOrg"
            }
          },
          {
            "name": "updateMask",
            "description": "Fields to update. Automatically populated by a PATCH request. If not present, a full resource update is performed.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrgService"
        ]
      },
      "patch": {
        "summary": "Update an organization.",
        "operationId": "OrgService_UpdateOrg2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOrg"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "org.id",
            "description": "Organization ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Org message to update.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiOrg"
            }
          },
          {
            "name": "updateMask",
            "description": "Fields to update. Automatically populated by a PATCH request. If not present, a full resource update is performed.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrgService"
        ]
      }
    },
    "/v1/sessions/keys": {
      "get": {
        "summary": "List all API keys.",
        "operationId": "SessionService_ListKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "Number of API keys to retrieve in a single page. Defaults to 50 if not specified, with a maximum of 250.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Token of the page to retrieve. If not specified, the first page of results will be returned. To request the next page of results, use next_page_token from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SessionService"
        ]
      },
      "post": {
        "summary": "Create an API key.",
        "operationId": "SessionService_CreateKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateKeyResponse"
            }
          },
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Key message to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiKey"
            }
          }
        ],
        "tags": [
          "SessionService"
        ]
      }
    },
    "/v1/sessions/keys/{id}": {
      "delete": {
        "summary": "Delete an API key by ID.",
        "operationId": "SessionService_DeleteKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "204": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Key ID (UUID) to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SessionService"
        ]
      }
    },
    "/v1/sessions/login": {
      "post": {
        "summary": "Log in a user.",
        "operationId": "SessionService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiLoginRequest"
            }
          }
        ],
        "tags": [
          "SessionService"
        ],
        "security": []
      }
    },
    "/v1/users": {
      "get": {
        "summary": "List all users.",
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "Number of users to retrieve in a single page. Defaults to 50 if not specified, with a maximum of 250.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Token of the page to retrieve. If not specified, the first page of results will be returned. To request the next page of results, use next_page_token from the previous response.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "summary": "Create a user.",
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          },
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "User message to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{id}": {
      "get": {
        "summary": "Get a user by ID.",
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User ID (UUID) to get.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "Delete a user by ID.",
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "204": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User ID (UUID) to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{id}/password": {
      "put": {
        "summary": "Update a user's password.",
        "operationId": "UserService_UpdateUserPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User ID (UUID) to update password.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "description": "User password to update.",
                  "required": [
                    "password"
                  ]
                }
              },
              "description": "UpdateUserPasswordRequest is sent to update a user's password.",
              "required": [
                "password"
              ]
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{user.id}": {
      "put": {
        "summary": "Update a user.",
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "description": "User ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "User message to update.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          },
          {
            "name": "updateMask",
            "description": "Fields to update. Automatically populated by a PATCH request. If not present, a full resource update is performed.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "patch": {
        "summary": "Update a user.",
        "operationId": "UserService_UpdateUser2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "description": "User ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "User message to update.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          },
          {
            "name": "updateMask",
            "description": "Fields to update. Automatically populated by a PATCH request. If not present, a full resource update is performed.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "apiApp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Application ID (UUID).",
          "readOnly": true
        },
        "orgID": {
          "type": "string",
          "description": "Organization ID (UUID).",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Application name."
        },
        "displayName": {
          "type": "string",
          "description": "Application display name. Used anywhere the application is shown to a user, including templates and notification sender fields."
        },
        "email": {
          "type": "string",
          "description": "Application email. Optional, used as the 'From' address in email notifications."
        },
        "subjectTemplate": {
          "type": "string",
          "description": "Application subject template. Templates generate HTML-safe output using the [Go template engine](https://golang.org/pkg/html/template/). Optional, for notification methods that support subjects."
        },
        "textBodyTemplate": {
          "type": "string",
          "description": "Application text body template. Templates generate HTML-safe output using the [Go template engine](https://golang.org/pkg/html/template/)."
        },
        "htmlBodyTemplate": {
          "type": "string",
          "format": "byte",
          "description": "Application HTML body template. Templates generate HTML-safe output using the [Go template engine](https://golang.org/pkg/html/template/). Optional, for notification methods that support HTML bodies. When used in JSON, the value will be represented as a base64 string."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Application creation timestamp.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Application modification timestamp.",
          "readOnly": true
        }
      },
      "description": "App represents an application as stored in the database."
    },
    "apiCreateIdentityResponse": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/apiIdentity",
          "description": "Identity message created."
        },
        "secret": {
          "type": "string",
          "description": "Secret in base32 format, for identity methods that provide secrets. Only returned once, upon identity creation."
        },
        "qr": {
          "type": "string",
          "format": "byte",
          "description": "Identity QR code, in Google Authenticator-compatible format, as a PNG image. For identity methods that provide secrets. Only returned once, upon identity creation. When used in JSON, the value will be represented as a base64 string."
        }
      },
      "description": "CreateIdentityResponse is sent in response to an identity creation."
    },
    "apiCreateKeyResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/apiKey",
          "description": "Key message created."
        },
        "token": {
          "type": "string",
          "description": "Token to be used for subsequent calls. Only returned once, upon key creation."
        }
      },
      "description": "CreateKeyResponse is sent in response to an API key creation."
    },
    "apiGoogleAuthHOTPMethod": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code."
        }
      },
      "description": "GoogleAuthHOTPMethod configures a Google Authenticator HOTP one-time password method."
    },
    "apiGoogleAuthTOTPMethod": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code."
        }
      },
      "description": "GoogleAuthTOTPMethod configures a Google Authenticator TOTP one-time password method."
    },
    "apiHardwareHOTPMethod": {
      "type": "object",
      "properties": {
        "hash": {
          "$ref": "#/definitions/apiHash",
          "description": "Hardware HOTP hash function. Defaults to SHA512 if not specified."
        },
        "digits": {
          "type": "integer",
          "format": "int32",
          "description": "Passcode digits length."
        },
        "counter": {
          "type": "integer",
          "format": "int32",
          "description": "Hardware HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified."
        },
        "secret": {
          "type": "string",
          "format": "byte",
          "description": "Hardware HOTP secret. Only included during identity creation. When used in JSON, the value will be represented as a base64 string."
        }
      },
      "description": "HardwareHOTPMethod configures a hardware OATH HOTP one-time password method."
    },
    "apiHardwareTOTPMethod": {
      "type": "object",
      "properties": {
        "hash": {
          "$ref": "#/definitions/apiHash",
          "description": "Hardware TOTP hash function. Defaults to SHA512 if not specified."
        },
        "digits": {
          "type": "integer",
          "format": "int32",
          "description": "Passcode digits length."
        },
        "secret": {
          "type": "string",
          "format": "byte",
          "description": "Hardware TOTP secret. Only included during identity creation. When used in JSON, the value will be represented as a base64 string."
        }
      },
      "description": "HardwareTOTPMethod configures a hardware OATH TOTP one-time password method."
    },
    "apiHash": {
      "type": "string",
      "enum": [
        "SHA512",
        "SHA256",
        "SHA1"
      ],
      "default": "SHA512",
      "description": "Hash represents a hash function.\n\n - SHA512: SHA-2 512 bits.\n - SHA256: SHA-2 256 bits.\n - SHA1: SHA-1."
    },
    "apiIdentity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identity ID (UUID).",
          "readOnly": true
        },
        "orgID": {
          "type": "string",
          "description": "Organization ID (UUID).",
          "readOnly": true
        },
        "appID": {
          "type": "string",
          "description": "Application ID (UUID).",
          "readOnly": true
        },
        "comment": {
          "type": "string",
          "description": "Identity comment. This should be an opaque identifier known to the consuming application.",
          "required": [
            "comment"
          ]
        },
        "status": {
          "$ref": "#/definitions/apiIdentityStatus",
          "description": "Identity status."
        },
        "softwareHOTPMethod": {
          "$ref": "#/definitions/apiSoftwareHOTPMethod",
          "description": "Software HOTP method configuration."
        },
        "softwareTOTPMethod": {
          "$ref": "#/definitions/apiSoftwareTOTPMethod",
          "description": "Software TOTP method configuration."
        },
        "googleAuthHOTPMethod": {
          "$ref": "#/definitions/apiGoogleAuthHOTPMethod",
          "description": "Google Authenticator HOTP method configuration."
        },
        "googleAuthTOTPMethod": {
          "$ref": "#/definitions/apiGoogleAuthTOTPMethod",
          "description": "Google Authenticator TOTP method configuration."
        },
        "microsoftAuthTOTPMethod": {
          "$ref": "#/definitions/apiMicrosoftAuthTOTPMethod",
          "description": "Microsoft Authenticator TOTP method configuration."
        },
        "hardwareHOTPMethod": {
          "$ref": "#/definitions/apiHardwareHOTPMethod",
          "description": "Hardware HOTP method configuration."
        },
        "hardwareTOTPMethod": {
          "$ref": "#/definitions/apiHardwareTOTPMethod",
          "description": "Hardware TOTP method configuration."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Identity creation timestamp.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Identity modification timestamp.",
          "readOnly": true
        }
      },
      "description": "Identity represents an identity as stored in the database.",
      "required": [
        "comment"
      ]
    },
    "apiIdentityStatus": {
      "type": "string",
      "enum": [
        "UNVERIFIED",
        "ACTIVATED"
      ],
      "default": "UNVERIFIED",
      "description": "IdentityStatus represents the status of an identity.\n\n - UNVERIFIED: Identity is not yet verified.\n - ACTIVATED: Identity has been activated."
    },
    "apiKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Key ID (UUID).",
          "readOnly": true
        },
        "orgID": {
          "type": "string",
          "description": "Organization ID (UUID).",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Key name.",
          "required": [
            "name"
          ]
        },
        "role": {
          "$ref": "#/definitions/commonRole",
          "description": "Key role."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Key creation timestamp.",
          "readOnly": true
        }
      },
      "description": "Key represents an API key as stored in the database.",
      "required": [
        "name"
      ]
    },
    "apiListAppsResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiApp"
          },
          "description": "App array, ordered by ascending created_at timestamp."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token used to retrieve the next page of results. Not returned for the last page."
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of applications available."
        }
      },
      "description": "ListAppsResponse is sent in response to an application list."
    },
    "apiListIdentitiesResponse": {
      "type": "object",
      "properties": {
        "identities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiIdentity"
          },
          "description": "Identity array, ordered by ascending created_at timestamp."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token used to retrieve the next page of results. Not returned for the last page."
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of identities available."
        }
      },
      "description": "ListIdentitiesResponse is sent in response to an identity list."
    },
    "apiListKeysResponse": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiKey"
          },
          "description": "Key array, ordered by ascending created_at timestamp."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token used to retrieve the next page of results. Not returned for the last page."
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of API keys available."
        }
      },
      "description": "ListKeysResponse is sent in response to an API key list."
    },
    "apiListOrgsResponse": {
      "type": "object",
      "properties": {
        "orgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiOrg"
          },
          "description": "Org array, ordered by ascending created_at timestamp."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token used to retrieve the next page of results. Not returned for the last page."
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of organizations available."
        }
      },
      "description": "ListOrgsResponse is sent in response to an organization list."
    },
    "apiListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiUser"
          },
          "description": "User array, ordered by ascending created_at timestamp."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token used to retrieve the next page of results. Not returned for the last page."
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of users available."
        }
      },
      "description": "ListUsersResponse is sent in response to a user list."
    },
    "apiLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email of the user to log in.",
          "required": [
            "email"
          ]
        },
        "orgName": {
          "type": "string",
          "description": "Organization name of the user to log in.",
          "required": [
            "org_name"
          ]
        },
        "password": {
          "type": "string",
          "description": "Password of the user to log in.",
          "required": [
            "password"
          ]
        }
      },
      "description": "LoginRequest is sent to log in a user.",
      "required": [
        "email",
        "orgName",
        "password"
      ]
    },
    "apiLoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Token to be used for subsequent non-login calls."
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Token expiration timestamp."
        }
      },
      "description": "LoginResponse is sent in response to a user login."
    },
    "apiMicrosoftAuthTOTPMethod": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code."
        }
      },
      "description": "MicrosoftAuthTOTPMethod configures a Microsoft Authenticator TOTP one-time password method. Due to limited hash function and digit support, this method is not recommended unless it is already in wide use."
    },
    "apiOrg": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Organization ID (UUID).",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Organization name."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Organization creation timestamp.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Organization modification timestamp.",
          "readOnly": true
        }
      },
      "description": "Org represents an organization as stored in the database."
    },
    "apiSoftwareHOTPMethod": {
      "type": "object",
      "properties": {
        "hash": {
          "$ref": "#/definitions/apiHash",
          "description": "Software HOTP hash function. Defaults to SHA512 if not specified."
        },
        "digits": {
          "type": "integer",
          "format": "int32",
          "description": "Passcode digits length. Defaults to 7 if not specified."
        },
        "counter": {
          "type": "integer",
          "format": "int32",
          "description": "Software HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified."
        },
        "accountName": {
          "type": "string",
          "description": "Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code."
        }
      },
      "description": "SoftwareHOTPMethod configures a software OATH HOTP one-time password method."
    },
    "apiSoftwareTOTPMethod": {
      "type": "object",
      "properties": {
        "hash": {
          "$ref": "#/definitions/apiHash",
          "description": "Software TOTP hash function. Defaults to SHA512 if not specified."
        },
        "digits": {
          "type": "integer",
          "format": "int32",
          "description": "Passcode digits length. Defaults to 7 if not specified."
        },
        "accountName": {
          "type": "string",
          "description": "Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code."
        }
      },
      "description": "SoftwareTOTPMethod configures a software OATH TOTP one-time password method."
    },
    "apiUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "User ID (UUID).",
          "readOnly": true
        },
        "orgID": {
          "type": "string",
          "description": "Organization ID (UUID).",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "User name."
        },
        "email": {
          "type": "string",
          "description": "User email."
        },
        "role": {
          "$ref": "#/definitions/commonRole",
          "description": "User role."
        },
        "status": {
          "$ref": "#/definitions/ownmfaapiStatus",
          "description": "User status."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "User creation timestamp.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "User modification timestamp.",
          "readOnly": true
        }
      },
      "description": "User represents a user as stored in the database."
    },
    "commonRole": {
      "type": "string",
      "enum": [
        "ROLE_UNSPECIFIED",
        "VIEWER",
        "AUTHENTICATOR",
        "ADMIN",
        "SYS_ADMIN"
      ],
      "default": "ROLE_UNSPECIFIED",
      "description": "Role represents the role of a user.\n\n - ROLE_UNSPECIFIED: Role is not specified.\n - VIEWER: Viewers can only read resources in their organization, but can update their own user.\n - AUTHENTICATOR: Authenticators can read and modify resources in their organization, but can only update their own user.\n - ADMIN: Admins can read and modify anything in their organization, including creating users of an equal or lesser role.\n - SYS_ADMIN: System admins can create organizations and modify anything in their organization."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "ownmfaapiStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "ACTIVE",
        "DISABLED"
      ],
      "default": "STATUS_UNSPECIFIED",
      "description": "Status represents the status of a message.\n\n - STATUS_UNSPECIFIED: Status is not specified.\n - ACTIVE: Message subject is active.\n - DISABLED: Message subject is disabled."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    }
  },
  "securityDefinitions": {
    "TokenAuth": {
      "type": "apiKey",
      "description": "Enter your token (/v1/sessions/login) in the format **Bearer \u0026lt;token\u0026gt;**",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "TokenAuth": []
    }
  ]
}
